{"version":3,"sources":["images/kontrol.png","images/tree-viz.png","images/hacked.jpg","pages/Home/StyledHome.tsx","models/TreeViz.tsx","pages/Home/Home.tsx","pages/TreeViz/StyledTreeViz.tsx","redux/actions/treeVisualizerActions.tsx","redux/reducers/treeVisualizerReducer.tsx","pages/TreeViz/TreeViz.tsx","StyledApp.tsx","redux/sagas/treeVisualizerSaga.tsx","redux/sagas/index.tsx","redux/reducers/index.tsx","redux/store.tsx","App.tsx","serviceWorker.js","index.js"],"names":["module","exports","NodeState","StyledHomePageLayout","styled","div","StyledHomeFirstSection","StyledHomeFirstSectionTextContainer","StyledHomeTitle","h1","StyledHomeSubTitle","h2","StyledHomeSubSubTitle","h3","StyledHomeSecondSectionTextContainer","StyledHomeLink","a","props","showLink","StyledHomeSection","StyledHomeSectionInner","right","StyledHomeSectionTitle","StyledHomeSectionRoleAndYear","StyledHomeSectionRole","h4","StyledHomeSectionYear","StyledHomeSectionText","p","StyledHomeSectionLinksContainer","ul","StyledHomeSectionLinkContainer","li","StyledHomeSectionLink","personLinks","title","url","projects","year","role","description","links","image","kontrolImage","imageAlt","treeVizImage","hackedImage","Home","useState","firstSectionText","setFirstSectionText","secondSectionText","setSecondSectionText","thirdSectionText","setThirdSectionText","showLinks","setShowLinks","firstSectionTextPointer","secondSectionTextPointer","thirdSectionTextPointer","useEffect","interval","setInterval","length","clearInterval","map","link","href","sort","p1","p2","project","Section","d","src","alt","uuidv1","require","GenNodeValueType","NodeModel","val","id","value","leftChild","rightChild","state","this","undefined","INIT","StyledPageLayout","StyledPageSideTree","svg","StyledPageSideCode","StyledCodePartContainer","StyledGenerateTreePartContainer","StyledGenerateTreeDetailsContainer","StyledGenerateTreeButtonContainer","StyledNodeCircle","circle","VISITING","WAITING","VISITED","speed","StyledNodeValue","text","StyledNodeBranch","line","StyledButton","button","StyledRangedInput","input","createRootNodeAction","createAction","resolve","nodeId","node","putRootNodeAction","updateTreeAction","putTreeAction","tree","generateTreeAction","putGenHeightAction","genHeight","putGenIsBSTreeAction","genIsBSTree","putGenIsCompleteTreeAction","genIsCompleteTree","putGenIsFullTreeAction","genIsFullTree","putGenNodeValueTypeAction","valueType","preOrderTraversalAction","inOrderTraversalAction","postOrderTraversalAction","levelOrderTraversalAction","resetNodesAction","updateExecutionSpeedAction","treeVisualizerReducer","combineReducers","rootNode","action","type","getType","payload","executionSpeed","genNodeValueType","STANDARD","getRootNodeFromState","treeVisualizer","getTreeFromState","getExecutionSpeedFromState","getGenHeightFromState","getGenIsBSTreeFromState","getGenIsCompleteTreefromState","getGenIsFullTreeFromState","getGenNodeValueTypeFromState","ConnectTreeViz","connect","dispatch","bindActionCreators","createRootNode","resetNodes","preOrderTraversal","inOrderTraversal","postOrderTraversal","levelOrderTraversal","updateExecutionSpeed","generateTree","putGenTreeHeight","putGenIsBSTree","putGenNodeValueType","curNode","onClick","list","min","max","onChange","event","Number","target","label","step","Tree","levelNodes","level","index","x","Math","pow","radius","y","xLeftChild","xRightChild","yChild","thetaLeft","atan","abs","thetaRight","leftBranchXOffset","sin","rightBranchXOffset","leftBranchYOffset","cos","rightBranchYOffset","key","x1","y1","x2","y2","Node","cx","cy","r","dy","StyledAppLayout","createRootNodeSaga","updateTreeSaga","preOrderTraversalSaga","preOrderTraversalSagaHelper","inOrderTraversalSaga","inOrderTraversalSagaHelper","postOrderTraversalSaga","postOrderTraversalSagaHelper","levelOrderTraversalSaga","levelOrderTraversalSagaHelper","resetNodesSaga","resetNodesSagaHelper","generateTreeSaga","treeVisualizerSaga","putResolve","put","console","warn","select","queue","push","nodesLevels","levelSize","curLevel","shift","error","fork","preOrderTask","take","cancel","delay","call","inOrderTask","postOrderTask","levelOrderTask","height","isBST","maxNodes","h","generateNode","curHeight","count","curLevelNodes","cur","minVal","maxVal","floor","RANDOM","random","EMOJI","emojis","all","takeLatest","rootSaga","RootReducer","sagaMiddleware","createSagaMiddleware","middlewares","enhancer","applyMiddleware","store","createStore","run","App","exact","path","component","TreeViz","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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AAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,SAAI,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,SAAI,SAAI,eAAK,SAAI,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,SAAI,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,SAAI,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,SAAI,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,SAAI,SAAI,SAAI,SAAI,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,SAAI,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,SAAI,eAAK,eAAK,SAAI,SAAI,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,SAAI,SAAI,eAAK,eAAK,eAAK,eAAK,SAAI,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,SAAI,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,SAAI,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,SAAI,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,SAAI,eAAK,eAAK,SAAI,eAAK,eAAK,SAAI,eAAK,SAAI,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,SAAI,eAAK,eAAK,SAAI,eAAK,eAAK,SAAI,eAAK,eAAK,eAAK,eAAK,eAAK,SAAI,SAAI,SAAI,SAAI,eAAK,eAAK,eAAK,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,eAAK,SAAI,SAAI,eAAK,eAAK,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,SAAI,eAAK,eAAK,eAAK,eAAK,SAAI,eAAK,eAAK,eAAK,eAAK,eAAK,SAAI,SAAI,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,eAAK,eAAK,eAAK,eAAK,eAAK,OAAI,OAAI,SAAI,SAAI,SAAI,eAAK,eAAK,eAAK,eAAK,eAAK,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,eAAK,eAAK,SAAI,SAAI,eAAK,eAAK,SAAI,eAAK,eAAK,eAAK,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,eAAK,SAAI,SAAI,SAAI,SAAI,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,gBAE/4H,OAAO,IAAI1L,GAAU0L,EAAO9E,KAAK0E,MAAM1E,KAAK4E,SAAWE,EAAO1M,YAItE,SAAUqK,KAAV,kEAEQ,OAFR,KACUsC,KADV,SAEcC,aAAW7H,mBAAQ/B,IAAuBwG,IAFxD,OAGQ,OAHR,qBAGcoD,aAAW7H,mBAAQzB,IAAmBmG,IAHpD,OAIQ,OAJR,qBAIcmD,aACF7H,mBAAQX,IACRsF,IANZ,OAQQ,OARR,sBAQckD,aAAW7H,mBAAQV,IAAyBuF,IAR1D,QASQ,OATR,sBAScgD,aACF7H,mBAAQT,IACRwF,IAXZ,QAaQ,OAbR,sBAac8C,aACF7H,mBAAQR,IACRyF,IAfZ,QAiBQ,OAjBR,sBAiBc4C,aAAW7H,mBAAQP,IAAmB0F,IAjBpD,QAkBQ,OAlBR,sBAkBc0C,aAAW7H,mBAAQtB,IAAqB2G,IAlBtD,QACI,OADJ,sEACI,cADJ,yCAqBeC,U,aCrUUwC,IAAV,SAAUA,KAAV,kEACX,OADW,SACLF,aAAI,CAACzB,aAAKb,MADL,wCCQR,IAAMyC,GAAcnI,2BAAuC,CAC9DU,eAAgBX,KCNdqI,I,MAAiBC,gBAEjBC,GAAc,CAACF,IAEjBG,GAAgB,KAMhBA,GAAWC,mBAAe,WAAf,EAAmBF,IAGlC,IAAMG,GAAQC,uBAAYP,GAAa,GAAII,IAC3CH,GAAeO,IAAIT,IACJO,UCKAG,GAZH,WACR,OACI,kBAAC,KAAD,CAAUH,MAAOA,IACb,kBAAC7D,GAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOiE,OAAK,EAACC,KAAK,IAAIC,UAAW1O,KACjC,kBAAC,IAAD,CAAOwO,OAAK,EAACC,KAAK,YAAYC,UAAWC,SCRzCC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.05cff833.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/kontrol.7e150448.png\";","module.exports = __webpack_public_path__ + \"static/media/tree-viz.3068ec05.png\";","module.exports = __webpack_public_path__ + \"static/media/hacked.aafc0860.jpg\";","import styled, { keyframes } from 'styled-components'\r\n\r\nexport const StyledHomePageLayout = styled.div`\r\n    background: #1f1f23;\r\n    color: white;\r\n    font-family: 'Courier New', Courier, monospace;\r\n`\r\n\r\nexport const StyledHomeFirstSection = styled.div`\r\n    height: 100vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: auto;\r\n`\r\n\r\nexport const StyledHomeFirstSectionTextContainer = styled.div`\r\n    margin: auto;\r\n    text-align: center;\r\n`\r\n\r\nexport const StyledHomeTitle = styled.h1`\r\n    margin-bottom: 4px;\r\n`\r\n\r\nexport const StyledHomeSubTitle = styled.h2`\r\n    margin-top: 4px;\r\n    color: #b9b9b9;\r\n`\r\n\r\nexport const StyledHomeSubSubTitle = styled.h3`\r\n    margin-top: 42px;\r\n    color: #b9b9b9;\r\n`\r\n\r\nexport const StyledHomeSecondSectionTextContainer = styled.div`\r\n    text-align: right;\r\n    display: inline;\r\n    padding-bottom: 0.5em;\r\n`\r\n\r\nexport const StyledHomeLink = styled.a<{ showLink?: boolean }>`\r\n    font-size: 20px;\r\n    color: white;\r\n    text-decoration: none;\r\n    margin-left: 1em;\r\n    margin-right: 1em;\r\n    opacity: ${props => (props.showLink ? 1 : 0)};\r\n    transition: opacity 0.35s;\r\n    pointer-events: ${props => (props.showLink ? `all` : `none`)};\r\n\r\n    :hover {\r\n        font-style: italic;\r\n        color: white;\r\n        cursor: pointer;\r\n    }\r\n`\r\n\r\nconst sectionMargin = 24\r\n\r\nexport const StyledHomeSection = styled.div`\r\n    min-height: 60vh;\r\n    margin: ${`${sectionMargin}px`};\r\n    display: flex;\r\n    flex-direction: row;\r\n`\r\n\r\nexport const StyledHomeSectionInner = styled.div<{ right?: boolean }>`\r\n    width: ${props => (props.right ? `calc(65% - 24px)` : `calc(35% - 24px)`)};\r\n    margin-right: ${props => (props.right ? `0px` : `${sectionMargin}px`)};\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    img {\r\n        object-fit: cover;\r\n        max-height: 800px;\r\n        width: 100%;\r\n        padding: 0px;\r\n    }\r\n`\r\n\r\nexport const StyledHomeSectionTitle = styled.h2`\r\n    margin-top: 0px;\r\n    margin-bottom: 0px;\r\n`\r\n\r\nexport const StyledHomeSectionRoleAndYear = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    margin-top: 4px;\r\n    margin-bottom: 16px;\r\n`\r\n\r\nexport const StyledHomeSectionRole = styled.h4`\r\n    margin: 0px;\r\n    margin-right: auto;\r\n`\r\n\r\nexport const StyledHomeSectionYear = styled.h4`\r\n    margin: 0px;\r\n    text-align: right;\r\n`\r\n\r\nexport const StyledHomeSectionText = styled.p`\r\n    margin-bottom: 1em;\r\n`\r\n\r\nexport const StyledHomeSectionLinksContainer = styled.ul`\r\n    align-self: flex-end;\r\n    padding-left: 0;\r\n    margin-top: auto;\r\n`\r\n\r\nexport const StyledHomeSectionLinkContainer = styled.li`\r\n    display: inline;\r\n    margin-left: 2em;\r\n`\r\n\r\nexport const StyledHomeSectionLink = styled.a`\r\n    font-size: 20px;\r\n    color: white;\r\n    text-decoration: none;\r\n\r\n    :hover {\r\n        font-style: italic;\r\n        color: white;\r\n        cursor: pointer;\r\n    }\r\n`\r\n","const uuidv1 = require('uuid/v1')\r\n\r\nexport enum NodeState {\r\n    INIT,\r\n    VISITING,\r\n    WAITING,\r\n    VISITED,\r\n}\r\n\r\nexport class NodeModel {\r\n    // data\r\n    id: string\r\n    value: any\r\n    leftChild?: NodeModel\r\n    rightChild?: NodeModel\r\n    // view\r\n    state: NodeState\r\n\r\n    constructor(val: any) {\r\n        this.id = uuidv1()\r\n        this.value = val\r\n        this.leftChild = undefined\r\n        this.rightChild = undefined\r\n        this.state = NodeState.INIT\r\n    }\r\n}\r\n\r\nexport enum GenNodeValueType {\r\n    STANDARD,\r\n    RANDOM,\r\n    EMOJI,\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport {\r\n    StyledHomeTitle,\r\n    StyledHomePageLayout,\r\n    StyledHomeFirstSection,\r\n    StyledHomeFirstSectionTextContainer,\r\n    StyledHomeSection,\r\n    StyledHomeSectionInner,\r\n    StyledHomeSectionTitle,\r\n    StyledHomeSectionText,\r\n    StyledHomeSectionLink,\r\n    StyledHomeSectionLinksContainer,\r\n    StyledHomeSectionLinkContainer,\r\n    StyledHomeSubTitle,\r\n    StyledHomeSubSubTitle,\r\n    StyledHomeSectionRoleAndYear,\r\n    StyledHomeSectionRole,\r\n    StyledHomeSectionYear,\r\n    StyledHomeSecondSectionTextContainer,\r\n    StyledHomeLink,\r\n} from './StyledHome'\r\nimport { SectionInfoModel, SectionLinkModel } from '../../models/Home'\r\nimport kontrolImage from '../../images/kontrol.png'\r\nimport treeVizImage from '../../images/tree-viz.png'\r\nimport hackedImage from '../../images/hacked.jpg'\r\n\r\nconst personLinks = [\r\n    {\r\n        title: 'LinkedIn',\r\n        url: 'https://ca.linkedin.com/in/marcus-boay',\r\n    },\r\n    {\r\n        title: 'GitHub',\r\n        url: 'https://github.com/MarcusBoay',\r\n    },\r\n    {\r\n        title: 'Twitter',\r\n        url: 'https://twitter.com/BoayMarcus',\r\n    },\r\n] as Array<SectionLinkModel>\r\nconst projects = [\r\n    {\r\n        title: 'Kontrol',\r\n        year: 2017,\r\n        role: 'Producer',\r\n        description: [\r\n            'A twin-stick shooter I made using Unity and C# over 9 months while balancing internship and school work.',\r\n            \"When I was a teenager, I adored old-school bullet hell games such as Gradius and R-Type. I found that these games aren't as popular as they used to be. I decided to set a goal to create such a game which involved self-studying game design, game programming, art and project management. \",\r\n            'The game has 3 hand-crafted levels with various enemies and bosses.',\r\n            'Kontrol has been front-paged on both Newgrounds and Kongregate and has garnered over 22,000 plays.',\r\n        ],\r\n        links: [\r\n            {\r\n                title: 'GitHub',\r\n                url: 'https://github.com/MarcusBoay/Kontrol',\r\n            },\r\n            {\r\n                title: 'NewGrounds',\r\n                url: 'https://www.newgrounds.com/portal/view/704281',\r\n            },\r\n        ],\r\n        image: kontrolImage,\r\n        imageAlt: 'kontrol gameplay image',\r\n    },\r\n    {\r\n        title: 'Tree Visualizer',\r\n        year: 2019,\r\n        role: 'Developer',\r\n        description: [\r\n            'Web-based visualizer to show classic tree traversal algorithms.',\r\n            'As a tech advocate and Computer Science student, I understand and emphatize with other students who struggle with algoritms and data structure. I realize the difficulty of understanding and visualizing them.',\r\n            'As a result to aid other students, I have created this visualizer that has classic tree traversal algorithms such as pre-order, in-order and post-order.',\r\n        ],\r\n        links: [{ title: 'Website', url: '/#/tree-viz' }],\r\n        image: treeVizImage,\r\n        imageAlt: 'tree visualizer image',\r\n    },\r\n    {\r\n        title: 'HackED',\r\n        year: 2018,\r\n        role: 'VP Finance',\r\n        description: [\r\n            'As a tech advocate, one of my goals is to get other people interested in our field.',\r\n            'As such, I was the VP Finance for HackED Beta 2017 and HackED 2018.',\r\n            'The event gained over 100 student participants as well as a few industry sponsors.',\r\n            'Check out their website below',\r\n        ],\r\n        links: [{ title: 'Website', url: 'https://hacked.compeclub.com' }],\r\n        image: hackedImage,\r\n        imageAlt: 'hacked post-event image',\r\n    },\r\n] as Array<SectionInfoModel>\r\nconst Home: React.FunctionComponent<{}> = () => {\r\n    const [firstSectionText, setFirstSectionText] = useState<string>('')\r\n    const [secondSectionText, setSecondSectionText] = useState<string>('')\r\n    const [thirdSectionText, setThirdSectionText] = useState<string>('')\r\n    const [showLinks, setShowLinks] = useState<boolean>(false)\r\n    let firstSectionTextPointer = 0\r\n    let secondSectionTextPointer = 0\r\n    let thirdSectionTextPointer = 0\r\n    const firstSectionTextFull = 'Marcus Boay'\r\n    const secondSectionTextFull = 'Software Engineer'\r\n    const thirdSectionTextFull =\r\n        'Delivering quality code with excellent user experience'\r\n\r\n    // title text animation\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            if (firstSectionTextPointer < firstSectionTextFull.length) {\r\n                setFirstSectionText(\r\n                    firstSectionText =>\r\n                        firstSectionText +\r\n                        firstSectionTextFull[firstSectionTextPointer]\r\n                )\r\n                firstSectionTextPointer++\r\n            } else if (\r\n                firstSectionTextPointer >= firstSectionTextFull.length &&\r\n                secondSectionTextPointer < secondSectionTextFull.length\r\n            ) {\r\n                setSecondSectionText(\r\n                    secondSectionText =>\r\n                        secondSectionText +\r\n                        secondSectionTextFull[secondSectionTextPointer]\r\n                )\r\n                secondSectionTextPointer++\r\n            } else if (\r\n                secondSectionTextPointer >= secondSectionTextFull.length &&\r\n                thirdSectionTextPointer < thirdSectionTextFull.length\r\n            ) {\r\n                setThirdSectionText(\r\n                    thirdSectionText =>\r\n                        thirdSectionText +\r\n                        thirdSectionTextFull[thirdSectionTextPointer]\r\n                )\r\n                thirdSectionTextPointer++\r\n            } else {\r\n                clearInterval(interval)\r\n                setShowLinks(true)\r\n            }\r\n        }, 35)\r\n\r\n        return () => {\r\n            clearInterval(interval)\r\n            setShowLinks(true)\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <StyledHomePageLayout>\r\n            <StyledHomeFirstSection>\r\n                <StyledHomeFirstSectionTextContainer>\r\n                    <StyledHomeTitle>{firstSectionText}</StyledHomeTitle>\r\n                    <StyledHomeSubTitle>{secondSectionText}</StyledHomeSubTitle>\r\n                    <StyledHomeSubSubTitle>\r\n                        {thirdSectionText}\r\n                    </StyledHomeSubSubTitle>\r\n                </StyledHomeFirstSectionTextContainer>\r\n                <StyledHomeSecondSectionTextContainer>\r\n                    {personLinks.map(link => (\r\n                        <StyledHomeLink href={link.url} showLink={showLinks}>\r\n                            {link.title}\r\n                        </StyledHomeLink>\r\n                    ))}\r\n                </StyledHomeSecondSectionTextContainer>\r\n            </StyledHomeFirstSection>\r\n            {projects\r\n                .sort((p1, p2) => (p1.year < p2.year ? 1 : -1))\r\n                .map(project => (\r\n                    <Section project={project} />\r\n                ))}\r\n        </StyledHomePageLayout>\r\n    )\r\n}\r\nexport default Home\r\n\r\ninterface SectionProps {\r\n    project: SectionInfoModel\r\n}\r\nconst Section: React.FunctionComponent<SectionProps> = ({ project }) => {\r\n    const generateLinks = () => {\r\n        return project.links.map(link => (\r\n            <StyledHomeSectionLinkContainer>\r\n                <StyledHomeSectionLink href={link.url}>\r\n                    {link.title}\r\n                </StyledHomeSectionLink>\r\n            </StyledHomeSectionLinkContainer>\r\n        ))\r\n    }\r\n\r\n    return (\r\n        <StyledHomeSection>\r\n            <StyledHomeSectionInner>\r\n                <StyledHomeSectionTitle>{project.title}</StyledHomeSectionTitle>\r\n                <StyledHomeSectionRoleAndYear>\r\n                    <StyledHomeSectionRole>\r\n                        {project.role}\r\n                    </StyledHomeSectionRole>\r\n                    <StyledHomeSectionYear>\r\n                        {project.year}\r\n                    </StyledHomeSectionYear>\r\n                </StyledHomeSectionRoleAndYear>\r\n                {project.description &&\r\n                    project.description.map(d => (\r\n                        <StyledHomeSectionText>{d}</StyledHomeSectionText>\r\n                    ))}\r\n                <StyledHomeSectionLinksContainer>\r\n                    {generateLinks()}\r\n                </StyledHomeSectionLinksContainer>\r\n            </StyledHomeSectionInner>\r\n            <StyledHomeSectionInner right>\r\n                <img src={project.image} alt={project.imageAlt} />\r\n            </StyledHomeSectionInner>\r\n        </StyledHomeSection>\r\n    )\r\n}\r\n","import styled from 'styled-components'\r\nimport { NodeState } from '../../models/TreeViz'\r\n\r\nexport const StyledPageLayout = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    background: #1f1f23;\r\n    color: white;\r\n    font-family: 'Courier New', Courier, monospace;\r\n`\r\n\r\nexport const StyledPageSideTree = styled.svg`\r\n    padding-left: 32px;\r\n    width: 50%;\r\n    min-height: 100vh;\r\n`\r\n\r\nexport const StyledPageSideCode = styled.div`\r\n    border-left: 1px solid black;\r\n    padding: 32px;\r\n    width: 50%;\r\n    height: calc(100vh - 64px);\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nexport const StyledCodePartContainer = styled.div`\r\n    flex-grow: 1;\r\n`\r\n\r\nexport const StyledGenerateTreePartContainer = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-self: flex-end;\r\n`\r\n\r\nexport const StyledGenerateTreeDetailsContainer = styled.div``\r\n\r\nexport const StyledGenerateTreeButtonContainer = styled.div`\r\n    margin-left: auto;\r\n`\r\n\r\nexport const StyledNodeCircle = styled.circle<{\r\n    state: NodeState\r\n    speed: number\r\n}>`\r\n    fill: ${props =>\r\n        props.state === NodeState.INIT\r\n            ? `#1F1F23`\r\n            : props.state === NodeState.VISITING\r\n            ? `#44B3C4`\r\n            : props.state === NodeState.WAITING\r\n            ? `#5757B2`\r\n            : props.state === NodeState.VISITED && `#41637F`};\r\n    transition: ${props => props.speed + 'ms'};\r\n    stroke: #18cae6;\r\n    stroke-width: 2;\r\n    color: #18cae6;\r\n`\r\n\r\nexport const StyledNodeValue = styled.text`\r\n    pointer-events: none;\r\n    text-anchor: middle;\r\n    fill: #d0db97;\r\n`\r\n\r\nexport const StyledNodeBranch = styled.line`\r\n    stroke: #18cae6;\r\n    stroke-width: 2;\r\n`\r\n\r\nexport const StyledButton = styled.button`\r\n    background: transparent;\r\n    color: #eaeaea;\r\n    font-size: 1em;\r\n    font-family: 'Courier New', Courier, monospace;\r\n    margin: 1em;\r\n    padding: 0.25em 1em;\r\n    border: 2px solid #eaeaea;\r\n    border-radius: 3px;\r\n    transition: 0.15s ease-in-out;\r\n\r\n    :hover {\r\n        background: #969696;\r\n        cursor: pointer;\r\n    }\r\n`\r\n\r\nexport const StyledRangedInput = styled.input`\r\n    min-width: 300px;\r\n    margin: 16px;\r\n`\r\n","import { createAction } from 'typesafe-actions'\r\nimport { NodeModel, GenNodeValueType } from '../../models/TreeViz'\r\n\r\n// Create, Update, Delete\r\nexport const createNodeAction = createAction(\r\n    'CREATE_NODE',\r\n    resolve => (nodeId: String) => resolve(nodeId)\r\n)\r\n\r\nexport const updateNodeAction = createAction(\r\n    'UPDATE_NODE',\r\n    resolve => (nodeId: String) => resolve(nodeId)\r\n)\r\n\r\nexport const deleteNodeAction = createAction(\r\n    'DELETE_NODE',\r\n    resolve => (nodeId: String) => resolve(nodeId)\r\n)\r\n\r\nexport const createRootNodeAction = createAction(\r\n    'CREATE_ROOT_NODE',\r\n    resolve => (node: NodeModel) => resolve(node)\r\n)\r\n\r\nexport const putRootNodeAction = createAction(\r\n    'PUT_ROOT_NODE',\r\n    resolve => (node: NodeModel) => resolve(node)\r\n)\r\n\r\nexport const updateTreeAction = createAction('UPDATE_TREE')\r\n\r\nexport const putTreeAction = createAction(\r\n    'PUT_TREE',\r\n    resolve => (tree: Array<NodeModel[]>) => resolve(tree)\r\n)\r\n\r\n// Generation\r\nexport const generateTreeAction = createAction('GENERATE_TREE')\r\n\r\nexport const putGenHeightAction = createAction(\r\n    'PUT_GEN_HEIGHT',\r\n    resolve => (genHeight: number) => resolve(genHeight)\r\n)\r\n\r\nexport const putGenIsBSTreeAction = createAction(\r\n    'PUT_GEN_IS_BS_TREE',\r\n    resolve => (genIsBSTree: boolean) => resolve(genIsBSTree)\r\n)\r\n\r\nexport const putGenIsCompleteTreeAction = createAction(\r\n    'PUT_GEN_IS_COMPLETE_TREE',\r\n    resolve => (genIsCompleteTree: boolean) => resolve(genIsCompleteTree)\r\n)\r\n\r\nexport const putGenIsFullTreeAction = createAction(\r\n    'PUT_GEN_IS_FULL_TREE',\r\n    resolve => (genIsFullTree: boolean) => resolve(genIsFullTree)\r\n)\r\n\r\nexport const putGenNodeValueTypeAction = createAction(\r\n    'PUT_GEN_NODE_VALUE_TYPE',\r\n    resolve => (valueType: GenNodeValueType) => resolve(valueType)\r\n)\r\n\r\n// Traversal\r\nexport const preOrderTraversalAction = createAction('PRE_ORDER_TRAVERSAL')\r\n\r\nexport const inOrderTraversalAction = createAction('IN_ORDER_TRAVERSAL')\r\n\r\nexport const postOrderTraversalAction = createAction('POST_ORDER_TRAVERSAL')\r\n\r\nexport const levelOrderTraversalAction = createAction('LEVEL_ORDER_TRAVERSAL')\r\n\r\nexport const resetNodesAction = createAction('RESET_NODES')\r\n\r\n// Traversal Settings\r\nexport const updateExecutionSpeedAction = createAction(\r\n    'UPDATE_EXECUTION_SPEED',\r\n    resolve => (speed: number) => resolve(speed)\r\n)\r\n","import { combineReducers } from 'redux'\r\nimport { RootAction } from '../actions'\r\nimport { NodeModel, GenNodeValueType } from '../../models/TreeViz'\r\nimport { getType } from 'typesafe-actions'\r\nimport {\r\n    putTreeAction,\r\n    putRootNodeAction,\r\n    updateExecutionSpeedAction,\r\n    putGenHeightAction,\r\n    putGenIsBSTreeAction,\r\n    putGenIsCompleteTreeAction,\r\n    putGenIsFullTreeAction,\r\n    putGenNodeValueTypeAction,\r\n} from '../actions/treeVisualizerActions'\r\nimport { RootState } from '.'\r\n\r\nexport type TreeVisualizerState = {\r\n    rootNode: NodeModel\r\n    tree: Array<NodeModel[]>\r\n    executionSpeed: number\r\n    genHeight: number\r\n    genIsBSTree: boolean\r\n    genIsCompleteTree: boolean\r\n    genIsFullTree: boolean\r\n    genNodeValueType: GenNodeValueType\r\n}\r\nexport const treeVisualizerReducer = combineReducers<\r\n    TreeVisualizerState,\r\n    RootAction\r\n>({\r\n    rootNode: (state: NodeModel = new NodeModel(0), action) => {\r\n        switch (action.type) {\r\n            case getType(putRootNodeAction):\r\n                return action.payload\r\n            default:\r\n                return state\r\n        }\r\n    },\r\n    tree: (state: Array<NodeModel[]> = [], action) => {\r\n        switch (action.type) {\r\n            case getType(putTreeAction):\r\n                return action.payload\r\n            default:\r\n                return state\r\n        }\r\n    },\r\n    executionSpeed: (state: number = 50, action) => {\r\n        switch (action.type) {\r\n            case getType(updateExecutionSpeedAction):\r\n                return action.payload\r\n            default:\r\n                return state\r\n        }\r\n    },\r\n    genHeight: (state: number = 4, action) => {\r\n        switch (action.type) {\r\n            case getType(putGenHeightAction):\r\n                return action.payload\r\n            default:\r\n                return state\r\n        }\r\n    },\r\n    genIsBSTree: (state: boolean = true, action) => {\r\n        switch (action.type) {\r\n            case getType(putGenIsBSTreeAction):\r\n                return action.payload\r\n            default:\r\n                return state\r\n        }\r\n    },\r\n    genIsCompleteTree: (state: boolean = false, action) => {\r\n        switch (action.type) {\r\n            case getType(putGenIsCompleteTreeAction):\r\n                return action.payload\r\n            default:\r\n                return state\r\n        }\r\n    },\r\n    genIsFullTree: (state: boolean = false, action) => {\r\n        switch (action.type) {\r\n            case getType(putGenIsFullTreeAction):\r\n                return action.payload\r\n            default:\r\n                return state\r\n        }\r\n    },\r\n    genNodeValueType: (\r\n        state: GenNodeValueType = GenNodeValueType.STANDARD,\r\n        action\r\n    ) => {\r\n        switch (action.type) {\r\n            case getType(putGenNodeValueTypeAction):\r\n                return action.payload\r\n            default:\r\n                return state\r\n        }\r\n    },\r\n})\r\n\r\nexport const getRootNodeFromState = (state: RootState): NodeModel => {\r\n    return state.treeVisualizer.rootNode\r\n}\r\n\r\nexport const getTreeFromState = (state: RootState): Array<NodeModel[]> => {\r\n    return state.treeVisualizer.tree\r\n}\r\n\r\nexport const getExecutionSpeedFromState = (state: RootState): number => {\r\n    return state.treeVisualizer.executionSpeed\r\n}\r\n\r\nexport const getGenHeightFromState = (state: RootState): number => {\r\n    return state.treeVisualizer.genHeight\r\n}\r\n\r\nexport const getGenIsBSTreeFromState = (state: RootState): boolean => {\r\n    return state.treeVisualizer.genIsBSTree\r\n}\r\n\r\nexport const getGenIsCompleteTreefromState = (state: RootState): boolean => {\r\n    return state.treeVisualizer.genIsCompleteTree\r\n}\r\n\r\nexport const getGenIsFullTreeFromState = (state: RootState): boolean => {\r\n    return state.treeVisualizer.genIsFullTree\r\n}\r\n\r\nexport const getGenNodeValueTypeFromState = (\r\n    state: RootState\r\n): GenNodeValueType => {\r\n    return state.treeVisualizer.genNodeValueType\r\n}\r\n","import React, { useEffect, Fragment } from 'react'\r\nimport {\r\n    StyledPageLayout,\r\n    StyledPageSideTree,\r\n    StyledPageSideCode,\r\n    StyledNodeCircle,\r\n    StyledNodeValue,\r\n    StyledNodeBranch,\r\n    StyledButton,\r\n    StyledGenerateTreePartContainer,\r\n    StyledCodePartContainer,\r\n    StyledGenerateTreeButtonContainer,\r\n    StyledGenerateTreeDetailsContainer,\r\n    StyledRangedInput,\r\n} from './StyledTreeViz'\r\nimport { RootState } from '../../redux/reducers'\r\nimport { NodeModel, GenNodeValueType } from '../../models/TreeViz'\r\nimport { Dispatch, bindActionCreators } from 'redux'\r\nimport { RootAction } from '../../redux/actions'\r\nimport {\r\n    getTreeFromState,\r\n    getRootNodeFromState,\r\n    getExecutionSpeedFromState,\r\n    getGenHeightFromState,\r\n    getGenIsBSTreeFromState,\r\n    getGenNodeValueTypeFromState,\r\n} from '../../redux/reducers/treeVisualizerReducer'\r\nimport {\r\n    createRootNodeAction,\r\n    preOrderTraversalAction,\r\n    inOrderTraversalAction,\r\n    resetNodesAction,\r\n    postOrderTraversalAction,\r\n    levelOrderTraversalAction,\r\n    updateExecutionSpeedAction,\r\n    generateTreeAction,\r\n    putGenHeightAction,\r\n    putGenIsBSTreeAction,\r\n    putGenNodeValueTypeAction,\r\n} from '../../redux/actions/treeVisualizerActions'\r\nimport { connect } from 'react-redux'\r\n\r\ninterface TreeVizProps {\r\n    rootNode: NodeModel\r\n    tree: Array<NodeModel[]>\r\n    executionSpeed: number\r\n    genHeight: number\r\n    genIsBSTree: boolean\r\n    genNodeValueType: GenNodeValueType\r\n    createRootNode: (node: NodeModel) => void\r\n    resetNodes: () => void\r\n    preOrderTraversal: () => void\r\n    inOrderTraversal: () => void\r\n    postOrderTraversal: () => void\r\n    levelOrderTraversal: () => void\r\n    updateExecutionSpeed: (speed: number) => void\r\n    generateTree: () => void\r\n    putGenTreeHeight: (genHeight: number) => void\r\n    putGenIsBSTree: (genIsBST: boolean) => void\r\n    putGenNodeValueType: (genNodeValueType: GenNodeValueType) => void\r\n}\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    rootNode: getRootNodeFromState(state),\r\n    tree: getTreeFromState(state),\r\n    executionSpeed: getExecutionSpeedFromState(state),\r\n    genHeight: getGenHeightFromState(state),\r\n    genIsBSTree: getGenIsBSTreeFromState(state),\r\n    genNodeValueType: getGenNodeValueTypeFromState(state),\r\n})\r\nconst mapDispatchToProps = (dispatch: Dispatch<RootAction>) =>\r\n    bindActionCreators(\r\n        {\r\n            createRootNode: createRootNodeAction,\r\n            resetNodes: resetNodesAction,\r\n            preOrderTraversal: preOrderTraversalAction,\r\n            inOrderTraversal: inOrderTraversalAction,\r\n            postOrderTraversal: postOrderTraversalAction,\r\n            levelOrderTraversal: levelOrderTraversalAction,\r\n            updateExecutionSpeed: updateExecutionSpeedAction,\r\n            generateTree: generateTreeAction,\r\n            putGenTreeHeight: putGenHeightAction,\r\n            putGenIsBSTree: putGenIsBSTreeAction,\r\n            putGenNodeValueType: putGenNodeValueTypeAction,\r\n        },\r\n        dispatch\r\n    )\r\n\r\nconst TreeViz: React.FunctionComponent<TreeVizProps> = ({\r\n    rootNode,\r\n    tree,\r\n    executionSpeed,\r\n    createRootNode,\r\n    resetNodes,\r\n    preOrderTraversal,\r\n    inOrderTraversal,\r\n    postOrderTraversal,\r\n    levelOrderTraversal,\r\n    updateExecutionSpeed,\r\n    generateTree,\r\n    putGenTreeHeight,\r\n    putGenIsBSTree,\r\n    putGenNodeValueType,\r\n    genHeight,\r\n    genIsBSTree,\r\n    genNodeValueType,\r\n}) => {\r\n    useEffect(() => {\r\n        // initial set of nodes\r\n        let curNode = rootNode\r\n        rootNode.leftChild = new NodeModel(1)\r\n        rootNode.rightChild = new NodeModel(2)\r\n        curNode = rootNode.leftChild\r\n        curNode.leftChild = new NodeModel(3)\r\n        curNode.rightChild = new NodeModel(4)\r\n        curNode = rootNode.rightChild\r\n        curNode.leftChild = new NodeModel(5)\r\n        curNode.rightChild = new NodeModel(6)\r\n        curNode = rootNode.leftChild!.leftChild!\r\n        curNode.leftChild = new NodeModel(7)\r\n        curNode.rightChild = new NodeModel(8)\r\n        curNode = rootNode.leftChild!.rightChild!\r\n        curNode.leftChild = new NodeModel(9)\r\n        curNode.rightChild = new NodeModel(10)\r\n        curNode = rootNode.leftChild!.leftChild!.leftChild!\r\n        curNode.leftChild = new NodeModel(11)\r\n\r\n        createRootNode(rootNode)\r\n    }, [])\r\n\r\n    return (\r\n        <StyledPageLayout>\r\n            <StyledPageSideTree>\r\n                <Tree tree={tree} speed={executionSpeed} />\r\n            </StyledPageSideTree>\r\n            <StyledPageSideCode>\r\n                <StyledCodePartContainer>\r\n                    {/* <p>this is where the code should live</p> */}\r\n                    <StyledButton\r\n                        onClick={() => {\r\n                            preOrderTraversal()\r\n                        }}\r\n                    >\r\n                        pre order\r\n                    </StyledButton>\r\n                    <StyledButton\r\n                        onClick={() => {\r\n                            inOrderTraversal()\r\n                        }}\r\n                    >\r\n                        in order\r\n                    </StyledButton>\r\n                    <StyledButton\r\n                        onClick={() => {\r\n                            postOrderTraversal()\r\n                        }}\r\n                    >\r\n                        post order\r\n                    </StyledButton>\r\n                    <StyledButton\r\n                        onClick={() => {\r\n                            levelOrderTraversal()\r\n                        }}\r\n                    >\r\n                        level order\r\n                    </StyledButton>\r\n                    <StyledButton\r\n                        onClick={() => {\r\n                            resetNodes()\r\n                        }}\r\n                    >\r\n                        reset\r\n                    </StyledButton>\r\n                    <div>\r\n                        <StyledRangedInput\r\n                            type=\"range\"\r\n                            list=\"speed-tickmarks\"\r\n                            min=\"50\"\r\n                            max=\"1000\"\r\n                            value={executionSpeed}\r\n                            onChange={event => {\r\n                                updateExecutionSpeed(Number(event.target.value))\r\n                            }}\r\n                        />\r\n                        <datalist id=\"speed-tickmarks\">\r\n                            <option value=\"50\" label=\"50ms\"></option>\r\n                            <option value=\"100\"></option>\r\n                            <option value=\"150\"></option>\r\n                            <option value=\"200\"></option>\r\n                            <option value=\"250\" label=\"250ms\"></option>\r\n                            <option value=\"300\"></option>\r\n                            <option value=\"400\"></option>\r\n                            <option value=\"500\" label=\"500ms\"></option>\r\n                            <option value=\"600\"></option>\r\n                            <option value=\"700\"></option>\r\n                            <option value=\"800\"></option>\r\n                            <option value=\"900\"></option>\r\n                            <option value=\"1000\" label=\"1000ms\"></option>\r\n                        </datalist>\r\n                        <span>Speed</span>\r\n                    </div>\r\n                </StyledCodePartContainer>\r\n                <StyledGenerateTreePartContainer>\r\n                    <StyledGenerateTreeDetailsContainer>\r\n                        <div>\r\n                            <StyledRangedInput\r\n                                type=\"range\"\r\n                                list=\"height-tickmarks\"\r\n                                min=\"1\"\r\n                                max=\"5\"\r\n                                step=\"1\"\r\n                                value={genHeight}\r\n                                onChange={event => {\r\n                                    putGenTreeHeight(Number(event.target.value))\r\n                                }}\r\n                            />\r\n                            <datalist id=\"height-tickmarks\">\r\n                                <option value=\"1\" label=\"1\"></option>\r\n                                <option value=\"2\"></option>\r\n                                <option value=\"3\"></option>\r\n                                <option value=\"4\"></option>\r\n                                <option value=\"5\" label=\"5\"></option>\r\n                            </datalist>\r\n                            <span>height</span>\r\n                        </div>\r\n                        {/* <div>\r\n                            is BST (left child is smaller than current is\r\n                            smaller than right child)? no\r\n                        </div>\r\n                        <div>node values: standard, randomized, 🐶</div> */}\r\n                    </StyledGenerateTreeDetailsContainer>\r\n                    <StyledGenerateTreeButtonContainer>\r\n                        <StyledButton onClick={generateTree}>\r\n                            Generate\r\n                        </StyledButton>\r\n                    </StyledGenerateTreeButtonContainer>\r\n                </StyledGenerateTreePartContainer>\r\n            </StyledPageSideCode>\r\n        </StyledPageLayout>\r\n    )\r\n}\r\nconst ConnectTreeViz = connect(mapStateToProps, mapDispatchToProps)(TreeViz)\r\nexport default ConnectTreeViz\r\n\r\ninterface TreeProps {\r\n    tree: Array<NodeModel[]>\r\n    speed: number\r\n}\r\nconst Tree: React.FunctionComponent<TreeProps> = ({ tree, speed }) => {\r\n    const radius: number = 20\r\n    const spacing: number = 10\r\n    const position: number = radius + spacing / 2\r\n\r\n    return (\r\n        <>\r\n            {tree.map((levelNodes, level) =>\r\n                levelNodes.map((node, index) => {\r\n                    const x =\r\n                        Math.pow(2, tree.length - level) *\r\n                        (index + 0.5) *\r\n                        position\r\n                    const y = 4 * (level + 1) * position\r\n\r\n                    const xLeftChild =\r\n                        Math.pow(2, tree.length - level - 1) *\r\n                        (2 * index + 0.5) *\r\n                        position\r\n                    const xRightChild =\r\n                        Math.pow(2, tree.length - level - 1) *\r\n                        (2 * index + 0.5 + 1) *\r\n                        position\r\n                    const yChild = 4 * (level + 2) * position\r\n\r\n                    const thetaLeft = Math.atan(\r\n                        Math.abs(x - xLeftChild) / Math.abs(y - yChild)\r\n                    )\r\n                    const thetaRight = Math.atan(\r\n                        Math.abs(x - xRightChild) / Math.abs(y - yChild)\r\n                    )\r\n\r\n                    const leftBranchXOffset = radius * Math.sin(thetaLeft)\r\n                    const rightBranchXOffset = radius * Math.sin(thetaRight)\r\n                    const leftBranchYOffset = radius * Math.cos(thetaLeft)\r\n                    const rightBranchYOffset = radius * Math.cos(thetaRight)\r\n\r\n                    return (\r\n                        <Fragment key={node.id}>\r\n                            <Node\r\n                                x={x}\r\n                                y={y}\r\n                                level={level}\r\n                                radius={radius}\r\n                                node={node}\r\n                                speed={speed}\r\n                            />\r\n                            {node.leftChild && (\r\n                                <StyledNodeBranch\r\n                                    x1={x - leftBranchXOffset}\r\n                                    y1={y + leftBranchYOffset}\r\n                                    x2={xLeftChild}\r\n                                    y2={yChild}\r\n                                />\r\n                            )}\r\n                            {node.rightChild && (\r\n                                <StyledNodeBranch\r\n                                    x1={x + rightBranchXOffset}\r\n                                    y1={y + rightBranchYOffset}\r\n                                    x2={xRightChild}\r\n                                    y2={yChild}\r\n                                />\r\n                            )}\r\n                        </Fragment>\r\n                    )\r\n                })\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\ninterface NodeProps {\r\n    x: number\r\n    y: number\r\n    level: number\r\n    radius: number\r\n    node: NodeModel\r\n    speed: number\r\n}\r\nconst Node: React.FunctionComponent<NodeProps> = ({\r\n    x,\r\n    y,\r\n    radius,\r\n    node,\r\n    speed,\r\n}) => {\r\n    return (\r\n        <g>\r\n            <StyledNodeCircle\r\n                cx={x}\r\n                cy={y}\r\n                r={radius}\r\n                state={node.state}\r\n                speed={speed}\r\n            />\r\n            <StyledNodeValue x={x} y={y} dy=\".3em\">\r\n                {node.value}\r\n            </StyledNodeValue>\r\n        </g>\r\n    )\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport const StyledAppLayout = styled.div`\r\n    min-height: 100vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n","import {\r\n    takeLatest,\r\n    all,\r\n    select,\r\n    put,\r\n    putResolve,\r\n    delay,\r\n    call,\r\n    take,\r\n    fork,\r\n    cancel,\r\n} from 'redux-saga/effects'\r\nimport { getType, ActionType } from 'typesafe-actions'\r\nimport {\r\n    updateTreeAction,\r\n    putTreeAction,\r\n    createRootNodeAction,\r\n    putRootNodeAction,\r\n    preOrderTraversalAction,\r\n    inOrderTraversalAction,\r\n    resetNodesAction,\r\n    postOrderTraversalAction,\r\n    levelOrderTraversalAction,\r\n    generateTreeAction,\r\n} from '../actions/treeVisualizerActions'\r\nimport { NodeModel, NodeState, GenNodeValueType } from '../../models/TreeViz'\r\nimport {\r\n    getRootNodeFromState,\r\n    getExecutionSpeedFromState,\r\n    getGenHeightFromState,\r\n    getGenIsBSTreeFromState,\r\n    getGenIsCompleteTreefromState,\r\n    getGenIsFullTreeFromState,\r\n    getGenNodeValueTypeFromState,\r\n} from '../reducers/treeVisualizerReducer'\r\n\r\nfunction* createRootNodeSaga(action: ActionType<typeof createRootNodeAction>) {\r\n    try {\r\n        const rootNode = action.payload\r\n        yield putResolve(putRootNodeAction(rootNode))\r\n        yield put(updateTreeAction())\r\n    } catch (e) {\r\n        console.warn('create root node saga: something went wrong!', e)\r\n    }\r\n}\r\n\r\nfunction* updateTreeSaga() {\r\n    try {\r\n        const rootNode = yield select(getRootNodeFromState)\r\n\r\n        let queue: NodeModel[] = []\r\n        queue.push(rootNode)\r\n\r\n        let nodesLevels: Array<NodeModel[]> = []\r\n        while (queue.length > 0) {\r\n            let levelSize = queue.length\r\n\r\n            let curLevel: NodeModel[] = []\r\n            while (levelSize > 0) {\r\n                let curNode: NodeModel = queue.shift() as NodeModel\r\n\r\n                curLevel.push(curNode)\r\n\r\n                if (curNode!.leftChild) queue.push(curNode!.leftChild)\r\n                if (curNode!.rightChild) queue.push(curNode!.rightChild)\r\n\r\n                levelSize--\r\n            }\r\n            nodesLevels.push(curLevel)\r\n        }\r\n\r\n        yield put(putTreeAction([...nodesLevels]))\r\n    } catch (e) {\r\n        console.error('update tree saga: something went wrong!', e)\r\n    }\r\n}\r\n\r\n// Traversal\r\n\r\nfunction* preOrderTraversalSaga() {\r\n    try {\r\n        yield put(resetNodesAction())\r\n\r\n        const rootNode = yield select(getRootNodeFromState)\r\n\r\n        const preOrderTask = yield fork(preOrderTraversalSagaHelper, rootNode)\r\n\r\n        yield take(resetNodesAction)\r\n\r\n        yield cancel(preOrderTask)\r\n    } catch (e) {\r\n        console.error('preorder traversal saga: something went wrong!', e)\r\n    }\r\n}\r\nfunction* preOrderTraversalSagaHelper(curNode: NodeModel): any {\r\n    if (!curNode) return\r\n\r\n    curNode.state = NodeState.WAITING\r\n    //nothing to wait for...\r\n\r\n    curNode.state = NodeState.VISITING\r\n    yield putResolve(updateTreeAction())\r\n    yield delay(yield select(getExecutionSpeedFromState))\r\n\r\n    yield call(preOrderTraversalSagaHelper, curNode.leftChild!)\r\n    yield call(preOrderTraversalSagaHelper, curNode.rightChild!)\r\n\r\n    curNode.state = NodeState.VISITED\r\n    yield putResolve(updateTreeAction())\r\n    yield delay(yield select(getExecutionSpeedFromState))\r\n}\r\n\r\nfunction* inOrderTraversalSaga() {\r\n    try {\r\n        yield put(resetNodesAction())\r\n\r\n        const rootNode = yield select(getRootNodeFromState)\r\n\r\n        const inOrderTask = yield fork(inOrderTraversalSagaHelper, rootNode)\r\n\r\n        yield take(resetNodesAction)\r\n\r\n        yield cancel(inOrderTask)\r\n    } catch (e) {\r\n        console.error('inorder traversal saga: something went wrong!', e)\r\n    }\r\n}\r\nfunction* inOrderTraversalSagaHelper(curNode: NodeModel): any {\r\n    if (!curNode) return\r\n\r\n    curNode.state = NodeState.WAITING\r\n    yield call(inOrderTraversalSagaHelper, curNode.leftChild!)\r\n\r\n    curNode.state = NodeState.VISITING\r\n    yield putResolve(updateTreeAction())\r\n    yield delay(yield select(getExecutionSpeedFromState))\r\n\r\n    yield call(inOrderTraversalSagaHelper, curNode.rightChild!)\r\n\r\n    curNode.state = NodeState.VISITED\r\n    yield putResolve(updateTreeAction())\r\n    yield delay(yield select(getExecutionSpeedFromState))\r\n}\r\n\r\nfunction* postOrderTraversalSaga() {\r\n    try {\r\n        yield put(resetNodesAction())\r\n\r\n        const rootNode = yield select(getRootNodeFromState)\r\n\r\n        const postOrderTask = yield fork(postOrderTraversalSagaHelper, rootNode)\r\n\r\n        yield take(resetNodesAction)\r\n\r\n        yield cancel(postOrderTask)\r\n    } catch (e) {\r\n        console.error('postorder traversal saga: something went wrong!', e)\r\n    }\r\n}\r\nfunction* postOrderTraversalSagaHelper(curNode: NodeModel): any {\r\n    if (!curNode) return\r\n\r\n    curNode.state = NodeState.WAITING\r\n    yield call(postOrderTraversalSagaHelper, curNode.leftChild!)\r\n\r\n    yield call(postOrderTraversalSagaHelper, curNode.rightChild!)\r\n\r\n    curNode.state = NodeState.VISITING\r\n    yield putResolve(updateTreeAction())\r\n    yield delay(yield select(getExecutionSpeedFromState))\r\n\r\n    curNode.state = NodeState.VISITED\r\n    yield putResolve(updateTreeAction())\r\n    yield delay(yield select(getExecutionSpeedFromState))\r\n}\r\n\r\nfunction* levelOrderTraversalSaga() {\r\n    try {\r\n        yield put(resetNodesAction())\r\n\r\n        const levelOrderTask = yield fork(levelOrderTraversalSagaHelper)\r\n\r\n        yield take(resetNodesAction)\r\n\r\n        yield cancel(levelOrderTask)\r\n    } catch (e) {\r\n        console.error('level order traversal saga: something went wrong!', e)\r\n    }\r\n}\r\nfunction* levelOrderTraversalSagaHelper() {\r\n    const rootNode = yield select(getRootNodeFromState)\r\n\r\n    let queue: NodeModel[] = []\r\n    queue.push(rootNode)\r\n\r\n    while (queue.length > 0) {\r\n        let levelSize = queue.length\r\n\r\n        while (levelSize > 0) {\r\n            let curNode: NodeModel = queue.shift() as NodeModel\r\n            curNode.state = NodeState.VISITING\r\n            yield putResolve(updateTreeAction())\r\n            yield delay(yield select(getExecutionSpeedFromState))\r\n            curNode.state = NodeState.VISITED\r\n\r\n            if (curNode!.leftChild) queue.push(curNode!.leftChild)\r\n            if (curNode!.rightChild) queue.push(curNode!.rightChild)\r\n\r\n            levelSize--\r\n        }\r\n    }\r\n    yield putResolve(updateTreeAction())\r\n}\r\n\r\nfunction* resetNodesSaga() {\r\n    try {\r\n        const rootNode = yield select(getRootNodeFromState)\r\n\r\n        yield call(resetNodesSagaHelper, rootNode)\r\n        yield putResolve(updateTreeAction())\r\n    } catch (e) {\r\n        console.error('reset nodes saga: something went wrong!', e)\r\n    }\r\n}\r\nfunction* resetNodesSagaHelper(curNode: NodeModel): any {\r\n    if (!curNode) return\r\n\r\n    curNode.state = NodeState.INIT\r\n    yield call(resetNodesSagaHelper, curNode.leftChild!)\r\n    yield call(resetNodesSagaHelper, curNode.rightChild!)\r\n}\r\n\r\n// Generation\r\n\r\nfunction* generateTreeSaga() {\r\n    try {\r\n        yield put(resetNodesAction())\r\n\r\n        const height = yield select(getGenHeightFromState)\r\n        const isBST = yield select(getGenIsBSTreeFromState)\r\n        const isComplete = yield select(getGenIsCompleteTreefromState)\r\n        const isFull = yield select(getGenIsFullTreeFromState)\r\n        const valueType = yield select(getGenNodeValueTypeFromState)\r\n\r\n        let maxNodes = 0\r\n        for (let h = 0; h < height; h++) {\r\n            maxNodes += 2 ** h\r\n        }\r\n\r\n        let queue = [] as Array<[NodeModel, number, number]>\r\n        let rootNode = generateNode(valueType, isBST, 0, maxNodes, 0)\r\n        queue.push([rootNode, 0, maxNodes])\r\n        let curHeight = 1\r\n        let count = 1\r\n\r\n        while (curHeight < height) {\r\n            let curLevelNodes = queue.length\r\n            while (curLevelNodes > 0) {\r\n                let cur = queue.shift() as [NodeModel, number, number]\r\n                let curNode = cur[0] as NodeModel\r\n                let minVal = cur[1]\r\n                let maxVal = cur[2]\r\n\r\n\r\n                // here is where the isComplete and isFull logic should come into play\r\n                curNode.leftChild = generateNode(valueType, isBST, minVal, curNode.value, count)\r\n                count++\r\n                queue.push([curNode.leftChild, minVal, curNode.value])\r\n\r\n                curNode.rightChild = generateNode(valueType, isBST, curNode.value, maxVal, count)\r\n                count++\r\n                queue.push([curNode.rightChild, curNode.value, maxVal])\r\n\r\n                curLevelNodes--\r\n            }\r\n            curHeight++\r\n        }\r\n\r\n        yield put(createRootNodeAction(rootNode))\r\n    } catch (e) {\r\n        console.error('generate tree saga: something went wrong!', e)\r\n    }\r\n}\r\nlet generateNode = (\r\n    valueType: GenNodeValueType,\r\n    isBST: boolean,\r\n    minVal: number,\r\n    maxVal: number,\r\n    count: number\r\n) => {\r\n    switch (valueType) {\r\n        case GenNodeValueType.STANDARD:\r\n            if (isBST) {\r\n                return new NodeModel(Math.floor((minVal + maxVal) / 2))\r\n            }\r\n            return new NodeModel(count)\r\n        case GenNodeValueType.RANDOM:\r\n            // RANDOM overrides isBST\r\n            return new NodeModel(Math.floor(Math.random() * Math.floor(100)))\r\n        case GenNodeValueType.EMOJI:\r\n            let emojis = [\r\n                '😄','😃','😀','😊','☺','😉','😍','😘','😚','😗','😙','😜','😝','😛','😳','😁','😔','😌','😒','😞','😣','😢','😂','😭','😪','😥','😰','😅','😓','😩','😫','😨','😱','😠','😡','😤','😖','😆','😋','😷','😎','😴','😵','😲','😟','😦','😧','😈','👿','😮','😬','😐','😕','😯','😶','😇','😏','😑','👲','👳','👮','👷','💂','👶','👦','👧','👨','👩','👴','👵','👱','👼','👸','😺','😸','😻','😽','😼','🙀','😿','😹','😾','👹','👺','🙈','🙉','🙊','💀','👽','💩','🔥','✨','🌟','💫','💥','💢','💦','💧','💤','💨','👂','👀','👃','👅','👄','👍','👎','👌','👊','✊','✌','👋','✋','👐','👆','👇','👉','👈','🙌','🙏','☝','👏','💪','🚶','🏃','💃','👫','👪','👬','👭','💏','💑','👯','🙆','🙅','💁','🙋','💆','💇','💅','👰','🙎','🙍','🙇','🎩','👑','👒','👟','👞','👡','👠','👢','👕','👔','👚','👗','🎽','👖','👘','👙','💼','👜','👝','👛','👓','🎀','🌂','💄','💛','💙','💜','💚','❤','💔','💗','💓','💕','💖','💞','💘','💌','💋','💍','💎','👤','👥','💬','👣','💭','🐶','🐺','🐱','🐭','🐹','🐰','🐸','🐯','🐨','🐻','🐷','🐽','🐮','🐗','🐵','🐒','🐴','🐑','🐘','🐼','🐧','🐦','🐤','🐥','🐣','🐔','🐍','🐢','🐛','🐝','🐜','🐞','🐌','🐙','🐚','🐠','🐟','🐬','🐳','🐋','🐄','🐏','🐀','🐃','🐅','🐇','🐉','🐎','🐐','🐓','🐕','🐖','🐁','🐂','🐲','🐡','🐊','🐫','🐪','🐆','🐈','🐩','🐾','💐','🌸','🌷','🍀','🌹','🌻','🌺','🍁','🍃','🍂','🌿','🌾','🍄','🌵','🌴','🌲','🌳','🌰','🌱','🌼','🌐','🌞','🌝','🌚','🌑','🌒','🌓','🌔','🌕','🌖','🌗','🌘','🌜','🌛','🌙','🌍','🌎','🌏','🌋','🌌','🌠','⭐','☀','⛅','☁','⚡','☔','❄','⛄','🌀','🌁','🌈','🌊','🎍','💝','🎎','🎒','🎓','🎏','🎆','🎇','🎐','🎑','🎃','👻','🎅','🎄','🎁','🎋','🎉','🎊','🎈','🎌','🔮','🎥','📷','📹','📼','💿','📀','💽','💾','💻','📱','☎','📞','📟','📠','📡','📺','📻','🔊','🔉','🔈','🔇','🔔','🔕','📢','📣','⏳','⌛','⏰','⌚','🔓','🔒','🔏','🔐','🔑','🔎','💡','🔦','🔆','🔅','🔌','🔋','🔍','🛁','🛀','🚿','🚽','🔧','🔩','🔨','🚪','🚬','💣','🔫','🔪','💊','💉','💰','💴','💵','💷','💶','💳','💸','📲','📧','📥','📤','✉','📩','📨','📯','📫','📪','📬','📭','📮','📦','📝','📄','📃','📑','📊','📈','📉','📜','📋','📅','📆','📇','📁','📂','✂','📌','📎','✒','✏','📏','📐','📕','📗','📘','📙','📓','📔','📒','📚','📖','🔖','📛','🔬','🔭','📰','🎨','🎬','🎤','🎧','🎼','🎵','🎶','🎹','🎻','🎺','🎷','🎸','👾','🎮','🃏','🎴','🀄','🎲','🎯','🏈','🏀','⚽','⚾','🎾','🎱','🏉','🎳','⛳','🚵','🚴','🏁','🏇','🏆','🎿','🏂','🏊','🏄','🎣','☕','🍵','🍶','🍼','🍺','🍻','🍸','🍹','🍷','🍴','🍕','🍔','🍟','🍗','🍖','🍝','🍛','🍤','🍱','🍣','🍥','🍙','🍘','🍚','🍜','🍲','🍢','🍡','🍳','🍞','🍩','🍮','🍦','🍨','🍧','🎂','🍰','🍪','🍫','🍬','🍭','🍯','🍎','🍏','🍊','🍋','🍒','🍇','🍉','🍓','🍑','🍈','🍌','🍐','🍍','🍠','🍆','🍅','🌽','🏠','🏡','🏫','🏢','🏣','🏥','🏦','🏪','🏩','🏨','💒','⛪','🏬','🏤','🌇','🌆','🏯','🏰','⛺','🏭','🗼','🗾','🗻','🌄','🌅','🌃','🗽','🌉','🎠','🎡','⛲','🎢','🚢','⛵','🚤','🚣','⚓','🚀','✈','💺','🚁','🚂','🚊','🚉','🚞','🚆','🚄','🚅','🚈','🚇','🚝','🚋','🚃','🚎','🚌','🚍','🚙','🚘','🚗','🚕','🚖','🚛','🚚','🚨','🚓','🚔','🚒','🚑','🚐','🚲','🚡','🚟','🚠','🚜','💈','🚏','🎫','🚦','🚥','⚠','🚧','🔰','⛽','🏮','🎰','♨','🗿','🎪','🎭','📍','🚩','⬆','⬇','⬅','➡','🔠','🔡','🔤','↗','↖','↘','↙','↔','↕','🔄','◀','▶','🔼','🔽','↩','↪','ℹ','⏪','⏩','⏫','⏬','⤵','⤴','🆗','🔀','🔁','🔂','🆕','🆙','🆒','🆓','🆖','📶','🎦','🈁','🈯','🈳','🈵','🈴','🈲','🉐','🈹','🈺','🈶','🈚','🚻','🚹','🚺','🚼','🚾','🚰','🚮','🅿','♿','🚭','🈷','🈸','🈂','Ⓜ','🛂','🛄','🛅','🛃','🉑','㊙','㊗','🆑','🆘','🆔','🚫','🔞','📵','🚯','🚱','🚳','🚷','🚸','⛔','✳','❇','❎','✅','✴','💟','🆚','📳','📴','🅰','🅱','🆎','🅾','💠','➿','♻','♈','♉','♊','♋','♌','♍','♎','♏','♐','♑','♒','♓','⛎','🔯','🏧','💹','💲','💱','©','®','™','〽','〰','🔝','🔚','🔙','🔛','🔜','❌','⭕','❗','❓','❕','❔','🔃','🕛','🕧','🕐','🕜','🕑','🕝','🕒','🕞','🕓','🕟','🕔','🕠','🕕','🕖','🕗','🕘','🕙','🕚','🕡','🕢','🕣','🕤','🕥','🕦','✖','➕','➖','➗','♠','♥','♣','♦','💮','💯','✔','☑','🔘','🔗','➰','🔱','🔲','🔳','◼','◻','◾','◽','▪','▫','🔺','⬜','⬛','⚫','⚪','🔴','🔵','🔻','🔶','🔷','🔸','🔹'\r\n            ]\r\n        return new NodeModel(emojis[Math.floor(Math.random() * emojis.length)])\r\n    }\r\n}\r\n\r\nfunction* treeVisualizerSaga() {\r\n    yield all([\r\n        yield takeLatest(getType(createRootNodeAction), createRootNodeSaga),\r\n        yield takeLatest(getType(updateTreeAction), updateTreeSaga),\r\n        yield takeLatest(\r\n            getType(preOrderTraversalAction),\r\n            preOrderTraversalSaga\r\n        ),\r\n        yield takeLatest(getType(inOrderTraversalAction), inOrderTraversalSaga),\r\n        yield takeLatest(\r\n            getType(postOrderTraversalAction),\r\n            postOrderTraversalSaga\r\n        ),\r\n        yield takeLatest(\r\n            getType(levelOrderTraversalAction),\r\n            levelOrderTraversalSaga\r\n        ),\r\n        yield takeLatest(getType(resetNodesAction), resetNodesSaga),\r\n        yield takeLatest(getType(generateTreeAction), generateTreeSaga)\r\n    ])\r\n}\r\nexport default treeVisualizerSaga\r\n","import { all, fork } from 'redux-saga/effects'\r\nimport treeVisualizerSaga from './treeVisualizerSaga'\r\n\r\nexport default function* rootSaga() {\r\n    yield all([fork(treeVisualizerSaga)])\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport { RootAction } from '../actions'\r\nimport {\r\n    treeVisualizerReducer,\r\n    TreeVisualizerState,\r\n} from './treeVisualizerReducer'\r\n\r\nexport interface RootState {\r\n    readonly treeVisualizer: TreeVisualizerState\r\n}\r\n\r\nexport const RootReducer = combineReducers<RootState, RootAction>({\r\n    treeVisualizer: treeVisualizerReducer,\r\n})\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport rootSaga from './sagas'\r\nimport { RootReducer } from './reducers'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\n\r\nconst middlewares = [sagaMiddleware]\r\n\r\nlet enhancer: any = null\r\nif (process.env.NODE_ENV !== `production`) {\r\n    if (typeof window !== 'undefined') {\r\n        enhancer = composeWithDevTools(applyMiddleware(...middlewares))\r\n    }\r\n} else {\r\n    enhancer = applyMiddleware(...middlewares)\r\n}\r\n\r\nconst store = createStore(RootReducer, {}, enhancer)\r\nsagaMiddleware.run(rootSaga)\r\nexport default store\r\n","import React from 'react'\r\nimport {\r\n    Switch,\r\n    Route,\r\n    BrowserRouter as Router,\r\n    HashRouter,\r\n} from 'react-router-dom'\r\nimport Home from './pages/Home/Home'\r\nimport TreeViz from './pages/TreeViz/TreeViz'\r\nimport NotFound from './pages/NotFound/NotFound'\r\nimport { StyledAppLayout } from './StyledApp'\r\nimport { Provider } from 'react-redux'\r\nimport store from './redux/store'\r\n\r\nconst App = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <StyledAppLayout>\r\n                <HashRouter>\r\n                    <Route exact path=\"/\" component={Home} />\r\n                    <Route exact path=\"/tree-viz\" component={TreeViz} />\r\n                </HashRouter>\r\n            </StyledAppLayout>\r\n        </Provider>\r\n    )\r\n}\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}